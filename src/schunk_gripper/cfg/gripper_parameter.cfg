#!/usr/bin/env python
PACKAGE = "schunk_gripper"
import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

paramConf=gen.add_group("Gripper Parameter")
paramConf.add("use_brk", bool_t, 0, "Use brake",  False)
paramConf.add("grp_pos_margin", double_t, 0,"Grip position margin in mm", 2, 1,10)
paramConf.add("grp_prepos_delta", double_t, 0, "Grip position delta in mm", 5, 1, 50)
paramConf.add("zero_pos_ofs", double_t, 0, "Zero position offset in mm", 0, -10000, 10000)
paramConf.add("grp_prehold_time", int_t, 0, "Grip prehold time in ms", 0, 0, 60000)
paramConf.add("wp_release_delta", double_t, 0, "Workpiece release delta in mm", 5, 1, 50)
paramConf.add("wp_lost_distance", double_t, 0, "Max. distance after workpiece lost in mm", 1, 0.1, 50)

con=gen.add_group("Control Parameter")
con.add("move_gripper", double_t, 0, "Moving the gripper with parameter in mm")
con.add("move_gripper_velocity", double_t, 0, "Changing the velocity for move_Gripper in mm/s")
con.add("grip_direction",bool_t,0, "Gripdirection for Parameter gripping", False)
con.add("grip", bool_t, 0, "Grip with parameter", False)
con.add("grip_force", double_t, 0, "Gripforce in %", 50, 50, 100)
con.add("release_workpiece", bool_t,0, "Release Workpiece", False)

exit(gen.generate(PACKAGE, "schunk_gripper_driver", "gripper_parameter"))